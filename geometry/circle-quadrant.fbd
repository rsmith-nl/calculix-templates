# file: circle-quadrant.fbd
# vim:fileencoding=utf-8:ft=cgx

rot y
rot r 135
rot u 30

## Parameters
# Radius
valu R / 50 1000
# Starting height
valu zs / 0 1000
# Thickness
valu z / 6 1000
# divisions
valu dl 24

## Section geometry
# If you are using different sections, make sure that each has a
# unique postfix!
# This can e.g. be generated with Python:
#  import random
#  import binascii
#  binascii.hexlify(random.randbytes(3)).decode("ascii").upper()
seto circle-quadrant-1B293C
pnt pq1 0 0 zs
pnt pq2 R 0 zs
pnt pq3 0 R zs
line lq1 pq1 pq2 dl
line lq2 pq1 pq3 dl
line lq3 pq2 pq3 pq1 dl
surf sq1 blend lq1 lq2 lq3
setc

## Everything below here is just for presentation.
# You can remove it if you are going to reuse this code.

## Show the geometry
valu showgeom 0
if showgeom > 0
rot y
rot u 90
frame
capt Circle quadrant generated by cgx.
plot pa all
plus la all
frame
zoom 0.7
capt Circle mesh.
# Save a picture
stop
hcpy png circle-quadrant
sys mogrify -trim circle-quadrant.png
endif

#### Everything below here is just for presentation. ####
# You can remove it if you are going to reuse this code.

# Show the mesh
valu showmesh 0
if showmesh > 0
# Define the view
rot y
rot u 30
rot r 15
# Extrude the geometry
seto circle-quadrant
swep circle-quadrant-1B293C new tra 0 0 z
setc
comp circle-quadrant
frame
zoom 0.9
tra r 0.005
# Mesh the tube
elty all he20r
mesh all
# Show the mesh
capt Circle quadrant mesh.
view elem
plot e all n
view surf
# Save a picture
stop
hcpy png circle-quadrant-mesh
sys mogrify -trim circle-quadrant-mesh.png
endif
