# file: rect-with-hole.fbd
# vim:fileencoding=utf-8:fdm=marker:ft=cgx
#
# Copyright © 2023 R.F. Smith <rsmith@xs4all.nl>
# SPDX-License-Identifier: MIT
# Created: 2023-10-08T13:59:52+0200
# Last modified: 2023-10-14T10:59:18+0200

## Call with “cgx -b rect-with-hole.fbd”.

# Width and height of the rectangle
valu W / 30 1000
valu H / 20 1000

# Hole diamater
valu D / 6 1000
# Hole location
valu hhor / 15 1000
valu hver / 10 1000

# Distance from origin to p1
valu hoffs 0
valu voffs 0
# Distance from XY plane
valu poffs 0

# Line divisions
valu divl 8

# Calulations
valu W + W hoffs
valu hhor + hhor hoffs
valu H + H voffs
valu vhor + vhor voffs
valu R / D 2

# In XY plane
pnt p1 hoffs voffs poffs
pnt p2 W voffs poffs
pnt p3 W H poffs
pnt p4 hoffs H poffs
pnt cp hhor hver poffs

# point 5, based off point 1
valu dx - hhor hoffs
valu dy - hver voffs
# scratch variables
valu dx2 * dx dx
valu dy2 * dy dy
valu dl + dx2 dy2
valu dl pow dl 0.5
valu i1 - dl R
valu f / i1 dl
valu dx * dx f
valu dy * dy f
# calculated point
valu p5x + hoffs dx
valu p5y + voffs dy
pnt p5 p5x p5y poffs

# point 6, based off point 2
valu dx - hhor W
valu dy - hver voffs
# scratch variables
valu dx2 * dx dx
valu dy2 * dy dy
valu dl + dx2 dy2
valu dl pow dl 0.5
valu i1 - dl R
valu f / i1 dl
valu dx * dx f
valu dy * dy f
# calculated point
valu p6x + W dx
valu p6y + voffs dy
pnt p6 p6x p6y poffs

# point 7, based off point 3
valu dx - hhor W
valu dy - hver H
# scratch variables
valu dx2 * dx dx
valu dy2 * dy dy
valu dl + dx2 dy2
valu dl pow dl 0.5
valu i1 - dl R
valu f / i1 dl
valu dx * dx f
valu dy * dy f
# calculated point
valu p7x + W dx
valu p7y + H dy
pnt p7 p7x p7y poffs

# point 8, based off point 4
valu dx - hhor hoffs
valu dy - hver H
# scratch variables
valu dx2 * dx dx
valu dy2 * dy dy
valu dl + dx2 dy2
valu dl pow dl 0.5
valu i1 - dl R
valu f / i1 dl
valu dx * dx f
valu dy * dy f
# calculated point
valu p8x + hoffs dx
valu p8y + H dy
pnt p8 p8x p8y poffs

## Section geometry
# If you are using different holed rectangles, make sure that each has a
# unique postfix!
# This can e.g. be generated with Python:
#  import random
#  import binascii
#  binascii.hexlify(random.randbytes(3)).decode("ascii").upper()
seto rect-with-hole-face-B179FB
line l1 p1 p5 divl
line l5 p1 p2 divl
line l9 p5 p6 cp divl
line l2 p2 p6 divl
line l6 p2 p3 divl
line l10 p6 p7 cp divl
line l3 p3 p7 divl
line l7 p3 p4 divl
line l11 p7 p8 cp divl
line l4 p4 p8 divl
line l8 p4 p1 divl
line l12 p8 p5 cp divl
surf s1 blend l1 l9 l2 l5
surf s2 blend l2 l10 l3 l6
surf s3 blend l3 l11 l4 l7
surf s4 blend l4 l12 l8 l1
setc

## Everything below here is just for presentation.
# You can remove it if you are going to reuse this code.

## Show the geometry
valu showgeom 0
if showgeom > 0
capt Rectangle with hole face geometry.
rot y
rot u 70
frame
zoom 0.9
plot pa all
plus la all
plus sa all
stop
hcpy png rectangle-with-hole-face
sys mogrify -trim rectangle-with-hole-face.png
endif

## Show the mesh
valu showmesh 0
if showmesh > 0
rot y
rot u 70
rot r 5
swep rect-with-hole-face-B179FB new tra 0 0 0.003 4
elty all he20r
mesh all
frame
zoom 0.9
capt Rectangular profile mesh.
view elem
plot e all n
view surf
stop
hcpy png rectangle-with-hole-mesh
sys mogrify -trim rectangle-with-hole-mesh.png
endif
